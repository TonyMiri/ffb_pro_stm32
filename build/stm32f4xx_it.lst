ARM GAS  /tmp/ccrXnOzX.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB134:
  28              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** 
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****  ******************************************************************************
   4:Src/stm32f4xx_it.c ****  * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****  * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****  ******************************************************************************
   7:Src/stm32f4xx_it.c ****  * @attention
   8:Src/stm32f4xx_it.c ****  *
   9:Src/stm32f4xx_it.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****  * All rights reserved.
  11:Src/stm32f4xx_it.c ****  *
  12:Src/stm32f4xx_it.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32f4xx_it.c ****  * in the root directory of this software component.
  14:Src/stm32f4xx_it.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32f4xx_it.c ****  *
  16:Src/stm32f4xx_it.c ****  ******************************************************************************
  17:Src/stm32f4xx_it.c ****  */
  18:Src/stm32f4xx_it.c **** 
  19:Src/stm32f4xx_it.c **** #include "main.h"
  20:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  21:Src/stm32f4xx_it.c **** 
  22:Src/stm32f4xx_it.c **** volatile uint8_t usb_debug_state = 0;
  23:Src/stm32f4xx_it.c **** volatile uint8_t usb_reset_count = 0;
  24:Src/stm32f4xx_it.c **** volatile uint8_t usb_suspend_count = 0;
  25:Src/stm32f4xx_it.c **** 
  26:Src/stm32f4xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_OTG_FS;
  27:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_tim5_ch1;
  28:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_tim5_ch2;
  29:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim5;
  30:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
ARM GAS  /tmp/ccrXnOzX.s 			page 2


  31:Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  32:Src/stm32f4xx_it.c **** 
  33:Src/stm32f4xx_it.c **** /******************************************************************************/
  34:Src/stm32f4xx_it.c **** 
  35:Src/stm32f4xx_it.c **** /******************************************************************************/
  36:Src/stm32f4xx_it.c **** /**
  37:Src/stm32f4xx_it.c ****  * @brief This function handles Non maskable interrupt.
  38:Src/stm32f4xx_it.c ****  */
  39:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  40:Src/stm32f4xx_it.c **** {
  29              		.loc 1 40 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c ****   while (1)
  36              		.loc 1 42 3 discriminator 1 view .LVU1
  43:Src/stm32f4xx_it.c ****   {
  44:Src/stm32f4xx_it.c ****   }
  37              		.loc 1 44 3 discriminator 1 view .LVU2
  42:Src/stm32f4xx_it.c ****   {
  38              		.loc 1 42 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE134:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv4-sp-d16
  51              	HardFault_Handler:
  52              	.LFB135:
  45:Src/stm32f4xx_it.c **** }
  46:Src/stm32f4xx_it.c **** 
  47:Src/stm32f4xx_it.c **** /**
  48:Src/stm32f4xx_it.c ****  * @brief This function handles Hard fault interrupt.
  49:Src/stm32f4xx_it.c ****  */
  50:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  51:Src/stm32f4xx_it.c **** {
  53              		.loc 1 51 1 view -0
  54              		.cfi_startproc
  55              		@ Volatile: function does not return.
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.L4:
  52:Src/stm32f4xx_it.c **** 
  53:Src/stm32f4xx_it.c ****   while (1)
  60              		.loc 1 53 3 discriminator 1 view .LVU5
  54:Src/stm32f4xx_it.c ****   {
  55:Src/stm32f4xx_it.c ****   }
  61              		.loc 1 55 3 discriminator 1 view .LVU6
ARM GAS  /tmp/ccrXnOzX.s 			page 3


  53:Src/stm32f4xx_it.c ****   {
  62              		.loc 1 53 9 discriminator 1 view .LVU7
  63 0000 FEE7     		b	.L4
  64              		.cfi_endproc
  65              	.LFE135:
  67              		.section	.text.MemManage_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	MemManage_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	MemManage_Handler:
  76              	.LFB136:
  56:Src/stm32f4xx_it.c **** }
  57:Src/stm32f4xx_it.c **** 
  58:Src/stm32f4xx_it.c **** /**
  59:Src/stm32f4xx_it.c ****  * @brief This function handles Memory management fault.
  60:Src/stm32f4xx_it.c ****  */
  61:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  62:Src/stm32f4xx_it.c **** {
  77              		.loc 1 62 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.L6:
  63:Src/stm32f4xx_it.c **** 
  64:Src/stm32f4xx_it.c ****   while (1)
  84              		.loc 1 64 3 discriminator 1 view .LVU9
  65:Src/stm32f4xx_it.c ****   {
  66:Src/stm32f4xx_it.c ****   }
  85              		.loc 1 66 3 discriminator 1 view .LVU10
  64:Src/stm32f4xx_it.c ****   {
  86              		.loc 1 64 9 discriminator 1 view .LVU11
  87 0000 FEE7     		b	.L6
  88              		.cfi_endproc
  89              	.LFE136:
  91              		.section	.text.BusFault_Handler,"ax",%progbits
  92              		.align	1
  93              		.global	BusFault_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	BusFault_Handler:
 100              	.LFB137:
  67:Src/stm32f4xx_it.c **** }
  68:Src/stm32f4xx_it.c **** 
  69:Src/stm32f4xx_it.c **** /**
  70:Src/stm32f4xx_it.c ****  * @brief This function handles Pre-fetch fault, memory access fault.
  71:Src/stm32f4xx_it.c ****  */
  72:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
  73:Src/stm32f4xx_it.c **** {
 101              		.loc 1 73 1 view -0
 102              		.cfi_startproc
ARM GAS  /tmp/ccrXnOzX.s 			page 4


 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.L8:
  74:Src/stm32f4xx_it.c **** 
  75:Src/stm32f4xx_it.c ****   while (1)
 108              		.loc 1 75 3 discriminator 1 view .LVU13
  76:Src/stm32f4xx_it.c ****   {
  77:Src/stm32f4xx_it.c ****   }
 109              		.loc 1 77 3 discriminator 1 view .LVU14
  75:Src/stm32f4xx_it.c ****   {
 110              		.loc 1 75 9 discriminator 1 view .LVU15
 111 0000 FEE7     		b	.L8
 112              		.cfi_endproc
 113              	.LFE137:
 115              		.section	.text.UsageFault_Handler,"ax",%progbits
 116              		.align	1
 117              		.global	UsageFault_Handler
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv4-sp-d16
 123              	UsageFault_Handler:
 124              	.LFB138:
  78:Src/stm32f4xx_it.c **** }
  79:Src/stm32f4xx_it.c **** 
  80:Src/stm32f4xx_it.c **** /**
  81:Src/stm32f4xx_it.c ****  * @brief This function handles Undefined instruction or illegal state.
  82:Src/stm32f4xx_it.c ****  */
  83:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
  84:Src/stm32f4xx_it.c **** {
 125              		.loc 1 84 1 view -0
 126              		.cfi_startproc
 127              		@ Volatile: function does not return.
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.L10:
  85:Src/stm32f4xx_it.c **** 
  86:Src/stm32f4xx_it.c ****   while (1)
 132              		.loc 1 86 3 discriminator 1 view .LVU17
  87:Src/stm32f4xx_it.c ****   {
  88:Src/stm32f4xx_it.c ****   }
 133              		.loc 1 88 3 discriminator 1 view .LVU18
  86:Src/stm32f4xx_it.c ****   {
 134              		.loc 1 86 9 discriminator 1 view .LVU19
 135 0000 FEE7     		b	.L10
 136              		.cfi_endproc
 137              	.LFE138:
 139              		.section	.text.SVC_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	SVC_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccrXnOzX.s 			page 5


 147              	SVC_Handler:
 148              	.LFB139:
  89:Src/stm32f4xx_it.c **** }
  90:Src/stm32f4xx_it.c **** 
  91:Src/stm32f4xx_it.c **** /**
  92:Src/stm32f4xx_it.c ****  * @brief This function handles System service call via SWI instruction.
  93:Src/stm32f4xx_it.c ****  */
  94:Src/stm32f4xx_it.c **** void SVC_Handler(void)
  95:Src/stm32f4xx_it.c **** {
 149              		.loc 1 95 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
  96:Src/stm32f4xx_it.c **** }
 154              		.loc 1 96 1 view .LVU21
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE139:
 159              		.section	.text.DebugMon_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	DebugMon_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	DebugMon_Handler:
 168              	.LFB140:
  97:Src/stm32f4xx_it.c **** 
  98:Src/stm32f4xx_it.c **** /**
  99:Src/stm32f4xx_it.c ****  * @brief This function handles Debug monitor.
 100:Src/stm32f4xx_it.c ****  */
 101:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 102:Src/stm32f4xx_it.c **** {
 169              		.loc 1 102 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 103:Src/stm32f4xx_it.c **** }
 174              		.loc 1 103 1 view .LVU23
 175 0000 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE140:
 179              		.section	.text.PendSV_Handler,"ax",%progbits
 180              		.align	1
 181              		.global	PendSV_Handler
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv4-sp-d16
 187              	PendSV_Handler:
 188              	.LFB141:
 104:Src/stm32f4xx_it.c **** 
 105:Src/stm32f4xx_it.c **** /**
 106:Src/stm32f4xx_it.c ****  * @brief This function handles Pendable request for system service.
 107:Src/stm32f4xx_it.c ****  */
ARM GAS  /tmp/ccrXnOzX.s 			page 6


 108:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 109:Src/stm32f4xx_it.c **** {
 189              		.loc 1 109 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 110:Src/stm32f4xx_it.c **** }
 194              		.loc 1 110 1 view .LVU25
 195 0000 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE141:
 199              		.section	.text.SysTick_Handler,"ax",%progbits
 200              		.align	1
 201              		.global	SysTick_Handler
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv4-sp-d16
 207              	SysTick_Handler:
 208              	.LFB142:
 111:Src/stm32f4xx_it.c **** 
 112:Src/stm32f4xx_it.c **** /**
 113:Src/stm32f4xx_it.c ****  * @brief This function handles System tick timer.
 114:Src/stm32f4xx_it.c ****  */
 115:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 116:Src/stm32f4xx_it.c **** {
 209              		.loc 1 116 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213 0000 08B5     		push	{r3, lr}
 214              	.LCFI0:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 3, -8
 217              		.cfi_offset 14, -4
 117:Src/stm32f4xx_it.c **** 
 118:Src/stm32f4xx_it.c ****   HAL_IncTick();
 218              		.loc 1 118 3 view .LVU27
 219 0002 FFF7FEFF 		bl	HAL_IncTick
 220              	.LVL0:
 119:Src/stm32f4xx_it.c **** }
 221              		.loc 1 119 1 is_stmt 0 view .LVU28
 222 0006 08BD     		pop	{r3, pc}
 223              		.cfi_endproc
 224              	.LFE142:
 226              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 227              		.align	1
 228              		.global	EXTI0_IRQHandler
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu fpv4-sp-d16
 234              	EXTI0_IRQHandler:
 235              	.LFB143:
 120:Src/stm32f4xx_it.c **** 
 121:Src/stm32f4xx_it.c **** /******************************************************************************/
ARM GAS  /tmp/ccrXnOzX.s 			page 7


 122:Src/stm32f4xx_it.c **** 
 123:Src/stm32f4xx_it.c **** /******************************************************************************/
 124:Src/stm32f4xx_it.c **** 
 125:Src/stm32f4xx_it.c **** /**
 126:Src/stm32f4xx_it.c ****  * @brief This function handles EXTI line0 interrupt.
 127:Src/stm32f4xx_it.c ****  */
 128:Src/stm32f4xx_it.c **** void EXTI0_IRQHandler(void)
 129:Src/stm32f4xx_it.c **** {
 236              		.loc 1 129 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 08B5     		push	{r3, lr}
 241              	.LCFI1:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 3, -8
 244              		.cfi_offset 14, -4
 130:Src/stm32f4xx_it.c **** 
 131:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(BTN1_Pin);
 245              		.loc 1 131 3 view .LVU30
 246 0002 0120     		movs	r0, #1
 247 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 248              	.LVL1:
 132:Src/stm32f4xx_it.c **** }
 249              		.loc 1 132 1 is_stmt 0 view .LVU31
 250 0008 08BD     		pop	{r3, pc}
 251              		.cfi_endproc
 252              	.LFE143:
 254              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 255              		.align	1
 256              		.global	EXTI1_IRQHandler
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv4-sp-d16
 262              	EXTI1_IRQHandler:
 263              	.LFB144:
 133:Src/stm32f4xx_it.c **** 
 134:Src/stm32f4xx_it.c **** /**
 135:Src/stm32f4xx_it.c ****  * @brief This function handles EXTI line1 interrupt.
 136:Src/stm32f4xx_it.c ****  */
 137:Src/stm32f4xx_it.c **** void EXTI1_IRQHandler(void)
 138:Src/stm32f4xx_it.c **** {
 264              		.loc 1 138 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI2:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
 139:Src/stm32f4xx_it.c **** 
 140:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(BTN2_Pin);
 273              		.loc 1 140 3 view .LVU33
 274 0002 0220     		movs	r0, #2
 275 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
ARM GAS  /tmp/ccrXnOzX.s 			page 8


 276              	.LVL2:
 141:Src/stm32f4xx_it.c **** }
 277              		.loc 1 141 1 is_stmt 0 view .LVU34
 278 0008 08BD     		pop	{r3, pc}
 279              		.cfi_endproc
 280              	.LFE144:
 282              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 283              		.align	1
 284              		.global	EXTI2_IRQHandler
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv4-sp-d16
 290              	EXTI2_IRQHandler:
 291              	.LFB145:
 142:Src/stm32f4xx_it.c **** 
 143:Src/stm32f4xx_it.c **** /**
 144:Src/stm32f4xx_it.c ****  * @brief This function handles EXTI line2 interrupt.
 145:Src/stm32f4xx_it.c ****  */
 146:Src/stm32f4xx_it.c **** void EXTI2_IRQHandler(void)
 147:Src/stm32f4xx_it.c **** {
 292              		.loc 1 147 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296 0000 08B5     		push	{r3, lr}
 297              	.LCFI3:
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 3, -8
 300              		.cfi_offset 14, -4
 148:Src/stm32f4xx_it.c **** 
 149:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(BTN3_Pin);
 301              		.loc 1 149 3 view .LVU36
 302 0002 0420     		movs	r0, #4
 303 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 304              	.LVL3:
 150:Src/stm32f4xx_it.c **** }
 305              		.loc 1 150 1 is_stmt 0 view .LVU37
 306 0008 08BD     		pop	{r3, pc}
 307              		.cfi_endproc
 308              	.LFE145:
 310              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 311              		.align	1
 312              		.global	EXTI3_IRQHandler
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu fpv4-sp-d16
 318              	EXTI3_IRQHandler:
 319              	.LFB146:
 151:Src/stm32f4xx_it.c **** 
 152:Src/stm32f4xx_it.c **** /**
 153:Src/stm32f4xx_it.c ****  * @brief This function handles EXTI line3 interrupt.
 154:Src/stm32f4xx_it.c ****  */
 155:Src/stm32f4xx_it.c **** void EXTI3_IRQHandler(void)
 156:Src/stm32f4xx_it.c **** {
 320              		.loc 1 156 1 is_stmt 1 view -0
ARM GAS  /tmp/ccrXnOzX.s 			page 9


 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 08B5     		push	{r3, lr}
 325              	.LCFI4:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 157:Src/stm32f4xx_it.c **** 
 158:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(BTN4_Pin);
 329              		.loc 1 158 3 view .LVU39
 330 0002 0820     		movs	r0, #8
 331 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 332              	.LVL4:
 159:Src/stm32f4xx_it.c **** }
 333              		.loc 1 159 1 is_stmt 0 view .LVU40
 334 0008 08BD     		pop	{r3, pc}
 335              		.cfi_endproc
 336              	.LFE146:
 338              		.section	.text.DMA1_Stream2_IRQHandler,"ax",%progbits
 339              		.align	1
 340              		.global	DMA1_Stream2_IRQHandler
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	DMA1_Stream2_IRQHandler:
 347              	.LFB147:
 160:Src/stm32f4xx_it.c **** 
 161:Src/stm32f4xx_it.c **** /**
 162:Src/stm32f4xx_it.c ****  * @brief This function handles DMA1 stream2 global interrupt.
 163:Src/stm32f4xx_it.c ****  */
 164:Src/stm32f4xx_it.c **** void DMA1_Stream2_IRQHandler(void)
 165:Src/stm32f4xx_it.c **** {
 348              		.loc 1 165 1 is_stmt 1 view -0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352 0000 08B5     		push	{r3, lr}
 353              	.LCFI5:
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 3, -8
 356              		.cfi_offset 14, -4
 166:Src/stm32f4xx_it.c **** 
 167:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim5_ch1);
 357              		.loc 1 167 3 view .LVU42
 358 0002 0248     		ldr	r0, .L26
 359 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 360              	.LVL5:
 168:Src/stm32f4xx_it.c **** }
 361              		.loc 1 168 1 is_stmt 0 view .LVU43
 362 0008 08BD     		pop	{r3, pc}
 363              	.L27:
 364 000a 00BF     		.align	2
 365              	.L26:
 366 000c 00000000 		.word	hdma_tim5_ch1
 367              		.cfi_endproc
ARM GAS  /tmp/ccrXnOzX.s 			page 10


 368              	.LFE147:
 370              		.section	.text.DMA1_Stream4_IRQHandler,"ax",%progbits
 371              		.align	1
 372              		.global	DMA1_Stream4_IRQHandler
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu fpv4-sp-d16
 378              	DMA1_Stream4_IRQHandler:
 379              	.LFB148:
 169:Src/stm32f4xx_it.c **** 
 170:Src/stm32f4xx_it.c **** /**
 171:Src/stm32f4xx_it.c ****  * @brief This function handles DMA1 stream4 global interrupt.
 172:Src/stm32f4xx_it.c ****  */
 173:Src/stm32f4xx_it.c **** void DMA1_Stream4_IRQHandler(void)
 174:Src/stm32f4xx_it.c **** {
 380              		.loc 1 174 1 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 08B5     		push	{r3, lr}
 385              	.LCFI6:
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 3, -8
 388              		.cfi_offset 14, -4
 175:Src/stm32f4xx_it.c **** 
 176:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim5_ch2);
 389              		.loc 1 176 3 view .LVU45
 390 0002 0248     		ldr	r0, .L30
 391 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 392              	.LVL6:
 177:Src/stm32f4xx_it.c **** }
 393              		.loc 1 177 1 is_stmt 0 view .LVU46
 394 0008 08BD     		pop	{r3, pc}
 395              	.L31:
 396 000a 00BF     		.align	2
 397              	.L30:
 398 000c 00000000 		.word	hdma_tim5_ch2
 399              		.cfi_endproc
 400              	.LFE148:
 402              		.section	.text.USART1_IRQHandler,"ax",%progbits
 403              		.align	1
 404              		.global	USART1_IRQHandler
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	USART1_IRQHandler:
 411              	.LFB149:
 178:Src/stm32f4xx_it.c **** 
 179:Src/stm32f4xx_it.c **** /**
 180:Src/stm32f4xx_it.c ****  * @brief This function handles USART1 global interrupt.
 181:Src/stm32f4xx_it.c ****  */
 182:Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 183:Src/stm32f4xx_it.c **** {
 412              		.loc 1 183 1 is_stmt 1 view -0
 413              		.cfi_startproc
ARM GAS  /tmp/ccrXnOzX.s 			page 11


 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 08B5     		push	{r3, lr}
 417              	.LCFI7:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 3, -8
 420              		.cfi_offset 14, -4
 184:Src/stm32f4xx_it.c **** 
 185:Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 421              		.loc 1 185 3 view .LVU48
 422 0002 0248     		ldr	r0, .L34
 423 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 424              	.LVL7:
 186:Src/stm32f4xx_it.c **** }
 425              		.loc 1 186 1 is_stmt 0 view .LVU49
 426 0008 08BD     		pop	{r3, pc}
 427              	.L35:
 428 000a 00BF     		.align	2
 429              	.L34:
 430 000c 00000000 		.word	huart1
 431              		.cfi_endproc
 432              	.LFE149:
 434              		.section	.text.TIM5_IRQHandler,"ax",%progbits
 435              		.align	1
 436              		.global	TIM5_IRQHandler
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv4-sp-d16
 442              	TIM5_IRQHandler:
 443              	.LFB150:
 187:Src/stm32f4xx_it.c **** 
 188:Src/stm32f4xx_it.c **** /**
 189:Src/stm32f4xx_it.c ****  * @brief This function handles TIM5 global interrupt.
 190:Src/stm32f4xx_it.c ****  */
 191:Src/stm32f4xx_it.c **** void TIM5_IRQHandler(void)
 192:Src/stm32f4xx_it.c **** {
 444              		.loc 1 192 1 is_stmt 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448 0000 08B5     		push	{r3, lr}
 449              	.LCFI8:
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 3, -8
 452              		.cfi_offset 14, -4
 193:Src/stm32f4xx_it.c **** 
 194:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim5);
 453              		.loc 1 194 3 view .LVU51
 454 0002 0248     		ldr	r0, .L38
 455 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 456              	.LVL8:
 195:Src/stm32f4xx_it.c **** }
 457              		.loc 1 195 1 is_stmt 0 view .LVU52
 458 0008 08BD     		pop	{r3, pc}
 459              	.L39:
 460 000a 00BF     		.align	2
ARM GAS  /tmp/ccrXnOzX.s 			page 12


 461              	.L38:
 462 000c 00000000 		.word	htim5
 463              		.cfi_endproc
 464              	.LFE150:
 466              		.section	.text.OTG_FS_IRQHandler,"ax",%progbits
 467              		.align	1
 468              		.global	OTG_FS_IRQHandler
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 472              		.fpu fpv4-sp-d16
 474              	OTG_FS_IRQHandler:
 475              	.LFB151:
 196:Src/stm32f4xx_it.c **** 
 197:Src/stm32f4xx_it.c **** /**
 198:Src/stm32f4xx_it.c ****  * @brief This function handles USB On The Go FS global interrupt.
 199:Src/stm32f4xx_it.c ****  */
 200:Src/stm32f4xx_it.c **** void OTG_FS_IRQHandler(void)
 201:Src/stm32f4xx_it.c **** {
 476              		.loc 1 201 1 is_stmt 1 view -0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480 0000 08B5     		push	{r3, lr}
 481              	.LCFI9:
 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 3, -8
 484              		.cfi_offset 14, -4
 202:Src/stm32f4xx_it.c ****   usb_debug_state++;
 485              		.loc 1 202 3 view .LVU54
 486              		.loc 1 202 18 is_stmt 0 view .LVU55
 487 0002 0E4A     		ldr	r2, .L44
 488 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 489 0006 0133     		adds	r3, r3, #1
 490 0008 DBB2     		uxtb	r3, r3
 491 000a 1370     		strb	r3, [r2]
 203:Src/stm32f4xx_it.c ****   
 204:Src/stm32f4xx_it.c ****   if(hpcd_USB_OTG_FS.Instance->GINTSTS & USB_OTG_GINTSTS_USBRST) {
 492              		.loc 1 204 3 is_stmt 1 view .LVU56
 493              		.loc 1 204 21 is_stmt 0 view .LVU57
 494 000c 0C4B     		ldr	r3, .L44+4
 495 000e 1B68     		ldr	r3, [r3]
 496              		.loc 1 204 30 view .LVU58
 497 0010 5A69     		ldr	r2, [r3, #20]
 498              		.loc 1 204 5 view .LVU59
 499 0012 12F4805F 		tst	r2, #4096
 500 0016 04D0     		beq	.L41
 205:Src/stm32f4xx_it.c ****     usb_reset_count++;
 501              		.loc 1 205 5 is_stmt 1 view .LVU60
 502              		.loc 1 205 20 is_stmt 0 view .LVU61
 503 0018 0A49     		ldr	r1, .L44+8
 504 001a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 505 001c 0132     		adds	r2, r2, #1
 506 001e D2B2     		uxtb	r2, r2
 507 0020 0A70     		strb	r2, [r1]
 508              	.L41:
 206:Src/stm32f4xx_it.c ****   }
ARM GAS  /tmp/ccrXnOzX.s 			page 13


 207:Src/stm32f4xx_it.c ****   if(hpcd_USB_OTG_FS.Instance->GINTSTS & USB_OTG_GINTSTS_USBSUSP) {
 509              		.loc 1 207 3 is_stmt 1 view .LVU62
 510              		.loc 1 207 30 is_stmt 0 view .LVU63
 511 0022 5B69     		ldr	r3, [r3, #20]
 512              		.loc 1 207 5 view .LVU64
 513 0024 13F4006F 		tst	r3, #2048
 514 0028 04D0     		beq	.L42
 208:Src/stm32f4xx_it.c ****     usb_suspend_count++;
 515              		.loc 1 208 5 is_stmt 1 view .LVU65
 516              		.loc 1 208 22 is_stmt 0 view .LVU66
 517 002a 074A     		ldr	r2, .L44+12
 518 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 519 002e 0133     		adds	r3, r3, #1
 520 0030 DBB2     		uxtb	r3, r3
 521 0032 1370     		strb	r3, [r2]
 522              	.L42:
 209:Src/stm32f4xx_it.c ****   }
 210:Src/stm32f4xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 523              		.loc 1 210 3 is_stmt 1 view .LVU67
 524 0034 0248     		ldr	r0, .L44+4
 525 0036 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 526              	.LVL9:
 211:Src/stm32f4xx_it.c **** }
 527              		.loc 1 211 1 is_stmt 0 view .LVU68
 528 003a 08BD     		pop	{r3, pc}
 529              	.L45:
 530              		.align	2
 531              	.L44:
 532 003c 00000000 		.word	.LANCHOR0
 533 0040 00000000 		.word	hpcd_USB_OTG_FS
 534 0044 00000000 		.word	.LANCHOR1
 535 0048 00000000 		.word	.LANCHOR2
 536              		.cfi_endproc
 537              	.LFE151:
 539              		.section	.text.DMA2_Stream7_IRQHandler,"ax",%progbits
 540              		.align	1
 541              		.global	DMA2_Stream7_IRQHandler
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 545              		.fpu fpv4-sp-d16
 547              	DMA2_Stream7_IRQHandler:
 548              	.LFB152:
 212:Src/stm32f4xx_it.c **** 
 213:Src/stm32f4xx_it.c **** /**
 214:Src/stm32f4xx_it.c ****  * @brief This function handles DMA2 stream7 global interrupt.
 215:Src/stm32f4xx_it.c ****  */
 216:Src/stm32f4xx_it.c **** void DMA2_Stream7_IRQHandler(void)
 217:Src/stm32f4xx_it.c **** {
 549              		.loc 1 217 1 is_stmt 1 view -0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553 0000 08B5     		push	{r3, lr}
 554              	.LCFI10:
 555              		.cfi_def_cfa_offset 8
 556              		.cfi_offset 3, -8
ARM GAS  /tmp/ccrXnOzX.s 			page 14


 557              		.cfi_offset 14, -4
 218:Src/stm32f4xx_it.c **** 
 219:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 558              		.loc 1 219 3 view .LVU70
 559 0002 0248     		ldr	r0, .L48
 560 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 561              	.LVL10:
 220:Src/stm32f4xx_it.c **** }
 562              		.loc 1 220 1 is_stmt 0 view .LVU71
 563 0008 08BD     		pop	{r3, pc}
 564              	.L49:
 565 000a 00BF     		.align	2
 566              	.L48:
 567 000c 00000000 		.word	hdma_usart1_tx
 568              		.cfi_endproc
 569              	.LFE152:
 571              		.global	usb_suspend_count
 572              		.global	usb_reset_count
 573              		.global	usb_debug_state
 574              		.section	.bss.usb_debug_state,"aw",%nobits
 575              		.set	.LANCHOR0,. + 0
 578              	usb_debug_state:
 579 0000 00       		.space	1
 580              		.section	.bss.usb_reset_count,"aw",%nobits
 581              		.set	.LANCHOR1,. + 0
 584              	usb_reset_count:
 585 0000 00       		.space	1
 586              		.section	.bss.usb_suspend_count,"aw",%nobits
 587              		.set	.LANCHOR2,. + 0
 590              	usb_suspend_count:
 591 0000 00       		.space	1
 592              		.text
 593              	.Letext0:
 594              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 595              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 596              		.file 4 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 597              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 598              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 599              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 600              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 601              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd.h"
 602              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 603              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccrXnOzX.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccrXnOzX.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccrXnOzX.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccrXnOzX.s:44     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccrXnOzX.s:51     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccrXnOzX.s:68     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccrXnOzX.s:75     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccrXnOzX.s:92     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccrXnOzX.s:99     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccrXnOzX.s:116    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccrXnOzX.s:123    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccrXnOzX.s:140    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccrXnOzX.s:147    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccrXnOzX.s:160    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccrXnOzX.s:167    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccrXnOzX.s:180    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccrXnOzX.s:187    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccrXnOzX.s:200    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccrXnOzX.s:207    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccrXnOzX.s:227    .text.EXTI0_IRQHandler:0000000000000000 $t
     /tmp/ccrXnOzX.s:234    .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
     /tmp/ccrXnOzX.s:255    .text.EXTI1_IRQHandler:0000000000000000 $t
     /tmp/ccrXnOzX.s:262    .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
     /tmp/ccrXnOzX.s:283    .text.EXTI2_IRQHandler:0000000000000000 $t
     /tmp/ccrXnOzX.s:290    .text.EXTI2_IRQHandler:0000000000000000 EXTI2_IRQHandler
     /tmp/ccrXnOzX.s:311    .text.EXTI3_IRQHandler:0000000000000000 $t
     /tmp/ccrXnOzX.s:318    .text.EXTI3_IRQHandler:0000000000000000 EXTI3_IRQHandler
     /tmp/ccrXnOzX.s:339    .text.DMA1_Stream2_IRQHandler:0000000000000000 $t
     /tmp/ccrXnOzX.s:346    .text.DMA1_Stream2_IRQHandler:0000000000000000 DMA1_Stream2_IRQHandler
     /tmp/ccrXnOzX.s:366    .text.DMA1_Stream2_IRQHandler:000000000000000c $d
     /tmp/ccrXnOzX.s:371    .text.DMA1_Stream4_IRQHandler:0000000000000000 $t
     /tmp/ccrXnOzX.s:378    .text.DMA1_Stream4_IRQHandler:0000000000000000 DMA1_Stream4_IRQHandler
     /tmp/ccrXnOzX.s:398    .text.DMA1_Stream4_IRQHandler:000000000000000c $d
     /tmp/ccrXnOzX.s:403    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccrXnOzX.s:410    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccrXnOzX.s:430    .text.USART1_IRQHandler:000000000000000c $d
     /tmp/ccrXnOzX.s:435    .text.TIM5_IRQHandler:0000000000000000 $t
     /tmp/ccrXnOzX.s:442    .text.TIM5_IRQHandler:0000000000000000 TIM5_IRQHandler
     /tmp/ccrXnOzX.s:462    .text.TIM5_IRQHandler:000000000000000c $d
     /tmp/ccrXnOzX.s:467    .text.OTG_FS_IRQHandler:0000000000000000 $t
     /tmp/ccrXnOzX.s:474    .text.OTG_FS_IRQHandler:0000000000000000 OTG_FS_IRQHandler
     /tmp/ccrXnOzX.s:532    .text.OTG_FS_IRQHandler:000000000000003c $d
     /tmp/ccrXnOzX.s:540    .text.DMA2_Stream7_IRQHandler:0000000000000000 $t
     /tmp/ccrXnOzX.s:547    .text.DMA2_Stream7_IRQHandler:0000000000000000 DMA2_Stream7_IRQHandler
     /tmp/ccrXnOzX.s:567    .text.DMA2_Stream7_IRQHandler:000000000000000c $d
     /tmp/ccrXnOzX.s:590    .bss.usb_suspend_count:0000000000000000 usb_suspend_count
     /tmp/ccrXnOzX.s:584    .bss.usb_reset_count:0000000000000000 usb_reset_count
     /tmp/ccrXnOzX.s:578    .bss.usb_debug_state:0000000000000000 usb_debug_state
     /tmp/ccrXnOzX.s:579    .bss.usb_debug_state:0000000000000000 $d
     /tmp/ccrXnOzX.s:585    .bss.usb_reset_count:0000000000000000 $d
     /tmp/ccrXnOzX.s:591    .bss.usb_suspend_count:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_GPIO_EXTI_IRQHandler
HAL_DMA_IRQHandler
ARM GAS  /tmp/ccrXnOzX.s 			page 16


hdma_tim5_ch1
hdma_tim5_ch2
HAL_UART_IRQHandler
huart1
HAL_TIM_IRQHandler
htim5
HAL_PCD_IRQHandler
hpcd_USB_OTG_FS
hdma_usart1_tx
