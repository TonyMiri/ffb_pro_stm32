ARM GAS  /tmp/ccl4Anca.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_desc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.USBD_FS_DeviceDescriptor,"ax",%progbits
  18              		.align	1
  19              		.global	USBD_FS_DeviceDescriptor
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	USBD_FS_DeviceDescriptor:
  27              	.LVL0:
  28              	.LFB138:
  29              		.file 1 "Src/usbd_desc.c"
   1:Src/usbd_desc.c **** 
   2:Src/usbd_desc.c **** /**
   3:Src/usbd_desc.c ****  ******************************************************************************
   4:Src/usbd_desc.c ****  * @file           : usbd_desc.c
   5:Src/usbd_desc.c ****  * @version        : v1.0_Cube
   6:Src/usbd_desc.c ****  * @brief          : This file implements the USB device descriptors.
   7:Src/usbd_desc.c ****  ******************************************************************************
   8:Src/usbd_desc.c ****  * @attention
   9:Src/usbd_desc.c ****  *
  10:Src/usbd_desc.c ****  * Copyright (c) 2024 STMicroelectronics.
  11:Src/usbd_desc.c ****  * All rights reserved.
  12:Src/usbd_desc.c ****  *
  13:Src/usbd_desc.c ****  * This software is licensed under terms that can be found in the LICENSE file
  14:Src/usbd_desc.c ****  * in the root directory of this software component.
  15:Src/usbd_desc.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Src/usbd_desc.c ****  *
  17:Src/usbd_desc.c ****  ******************************************************************************
  18:Src/usbd_desc.c ****  */
  19:Src/usbd_desc.c **** 
  20:Src/usbd_desc.c **** #include "usbd_core.h"
  21:Src/usbd_desc.c **** #include "usbd_desc.h"
  22:Src/usbd_desc.c **** #include "usbd_conf.h"
  23:Src/usbd_desc.c **** 
  24:Src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  25:Src/usbd_desc.c ****  * @{
  26:Src/usbd_desc.c ****  */
  27:Src/usbd_desc.c **** 
  28:Src/usbd_desc.c **** /** @addtogroup USBD_DESC
  29:Src/usbd_desc.c ****  * @{
ARM GAS  /tmp/ccl4Anca.s 			page 2


  30:Src/usbd_desc.c ****  */
  31:Src/usbd_desc.c **** 
  32:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions USBD_DESC_Private_TypesDefinitions
  33:Src/usbd_desc.c ****  * @brief Private types.
  34:Src/usbd_desc.c ****  * @{
  35:Src/usbd_desc.c ****  */
  36:Src/usbd_desc.c **** 
  37:Src/usbd_desc.c **** /**
  38:Src/usbd_desc.c ****  * @}
  39:Src/usbd_desc.c ****  */
  40:Src/usbd_desc.c **** 
  41:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines USBD_DESC_Private_Defines
  42:Src/usbd_desc.c ****  * @brief Private defines.
  43:Src/usbd_desc.c ****  * @{
  44:Src/usbd_desc.c ****  */
  45:Src/usbd_desc.c **** 
  46:Src/usbd_desc.c **** // Use a VID/PID combination that won't conflict with commercial devices
  47:Src/usbd_desc.c **** #define USBD_VID                    0x045E  // Microsoft VID
  48:Src/usbd_desc.c **** #define USBD_PID_FS                0x001B  // Sidewinder Force Feedback Pro PID
  49:Src/usbd_desc.c **** #define USBD_LANGID_STRING         0x0409  // English (US)
  50:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING   "Microsoft"  
  51:Src/usbd_desc.c **** #define USBD_PRODUCT_STRING_FS     "Sidewinder Force Feedback Pro"
  52:Src/usbd_desc.c **** #define USBD_CONFIGURATION_STRING_FS "FFB Config"
  53:Src/usbd_desc.c **** #define USBD_INTERFACE_STRING_FS "FFB Interface"
  54:Src/usbd_desc.c **** 
  55:Src/usbd_desc.c **** #define USB_SIZ_BOS_DESC 0x0C
  56:Src/usbd_desc.c **** 
  57:Src/usbd_desc.c **** /**
  58:Src/usbd_desc.c ****  * @}
  59:Src/usbd_desc.c ****  */
  60:Src/usbd_desc.c **** 
  61:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros USBD_DESC_Private_Macros
  62:Src/usbd_desc.c ****  * @brief Private macros.
  63:Src/usbd_desc.c ****  * @{
  64:Src/usbd_desc.c ****  */
  65:Src/usbd_desc.c **** 
  66:Src/usbd_desc.c **** /**
  67:Src/usbd_desc.c ****  * @}
  68:Src/usbd_desc.c ****  */
  69:Src/usbd_desc.c **** 
  70:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
  71:Src/usbd_desc.c ****  * @brief Private functions declaration.
  72:Src/usbd_desc.c ****  * @{
  73:Src/usbd_desc.c ****  */
  74:Src/usbd_desc.c **** 
  75:Src/usbd_desc.c **** static void Get_SerialNum(void);
  76:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t *pbuf, uint8_t len);
  77:Src/usbd_desc.c **** 
  78:Src/usbd_desc.c **** /**
  79:Src/usbd_desc.c ****  * @}
  80:Src/usbd_desc.c ****  */
  81:Src/usbd_desc.c **** 
  82:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
  83:Src/usbd_desc.c ****  * @brief Private functions declaration for FS.
  84:Src/usbd_desc.c ****  * @{
  85:Src/usbd_desc.c ****  */
  86:Src/usbd_desc.c **** 
ARM GAS  /tmp/ccl4Anca.s 			page 3


  87:Src/usbd_desc.c **** uint8_t *USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
  88:Src/usbd_desc.c **** uint8_t *USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
  89:Src/usbd_desc.c **** uint8_t *USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
  90:Src/usbd_desc.c **** uint8_t *USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
  91:Src/usbd_desc.c **** uint8_t *USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
  92:Src/usbd_desc.c **** uint8_t *USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
  93:Src/usbd_desc.c **** uint8_t *USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
  94:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
  95:Src/usbd_desc.c **** uint8_t *USBD_FS_USR_BOSDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
  96:Src/usbd_desc.c **** #endif
  97:Src/usbd_desc.c **** 
  98:Src/usbd_desc.c **** /**
  99:Src/usbd_desc.c ****  * @}
 100:Src/usbd_desc.c ****  */
 101:Src/usbd_desc.c **** 
 102:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 103:Src/usbd_desc.c ****  * @brief Private variables.
 104:Src/usbd_desc.c ****  * @{
 105:Src/usbd_desc.c ****  */
 106:Src/usbd_desc.c **** 
 107:Src/usbd_desc.c **** USBD_DescriptorsTypeDef FS_Desc =
 108:Src/usbd_desc.c ****     {
 109:Src/usbd_desc.c ****         USBD_FS_DeviceDescriptor, USBD_FS_LangIDStrDescriptor, USBD_FS_ManufacturerStrDescriptor, U
 110:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 111:Src/usbd_desc.c ****         ,
 112:Src/usbd_desc.c ****         USBD_FS_USR_BOSDescriptor
 113:Src/usbd_desc.c **** #endif
 114:Src/usbd_desc.c **** };
 115:Src/usbd_desc.c **** 
 116:Src/usbd_desc.c **** #if defined(__ICCARM__)
 117:Src/usbd_desc.c **** #pragma data_alignment = 4
 118:Src/usbd_desc.c **** #endif
 119:Src/usbd_desc.c **** /** USB standard device descriptor. */
 120:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_DeviceDesc[USB_LEN_DEV_DESC] __ALIGN_END =
 121:Src/usbd_desc.c **** {
 122:Src/usbd_desc.c ****     0x12,                       // bLength
 123:Src/usbd_desc.c ****     USB_DESC_TYPE_DEVICE,       // bDescriptorType
 124:Src/usbd_desc.c ****     0x00, 0x02,                // bcdUSB = 2.00
 125:Src/usbd_desc.c ****     0x00,                       // bDeviceClass (use class code in the interface descriptors)
 126:Src/usbd_desc.c ****     0x00,                       // bDeviceSubClass
 127:Src/usbd_desc.c ****     0x00,                       // bDeviceProtocol
 128:Src/usbd_desc.c ****     USB_MAX_EP0_SIZE,          // bMaxPacketSize
 129:Src/usbd_desc.c ****     LOBYTE(USBD_VID),          // idVendor
 130:Src/usbd_desc.c ****     HIBYTE(USBD_VID),          // idVendor
 131:Src/usbd_desc.c ****     LOBYTE(USBD_PID_FS),       // idProduct
 132:Src/usbd_desc.c ****     HIBYTE(USBD_PID_FS),       // idProduct
 133:Src/usbd_desc.c ****     0x00, 0x02,                // bcdDevice = 2.00
 134:Src/usbd_desc.c ****     USBD_IDX_MFC_STR,          // Index of manufacturer string
 135:Src/usbd_desc.c ****     USBD_IDX_PRODUCT_STR,      // Index of product string
 136:Src/usbd_desc.c ****     USBD_IDX_SERIAL_STR,       // Index of serial number string
 137:Src/usbd_desc.c ****     USBD_MAX_NUM_CONFIGURATION  // bNumConfigurations
 138:Src/usbd_desc.c **** };
 139:Src/usbd_desc.c **** 
 140:Src/usbd_desc.c **** /** BOS descriptor. */
 141:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 142:Src/usbd_desc.c **** #if defined(__ICCARM__)
 143:Src/usbd_desc.c **** #pragma data_alignment = 4
ARM GAS  /tmp/ccl4Anca.s 			page 4


 144:Src/usbd_desc.c **** #endif
 145:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_BOSDesc[USB_SIZ_BOS_DESC] __ALIGN_END =
 146:Src/usbd_desc.c ****     {
 147:Src/usbd_desc.c ****         0x5,
 148:Src/usbd_desc.c ****         USB_DESC_TYPE_BOS,
 149:Src/usbd_desc.c ****         0xC,
 150:Src/usbd_desc.c ****         0x0,
 151:Src/usbd_desc.c ****         0x1,
 152:Src/usbd_desc.c **** 
 153:Src/usbd_desc.c ****         0x7,
 154:Src/usbd_desc.c ****         USB_DEVICE_CAPABITY_TYPE,
 155:Src/usbd_desc.c ****         0x2,
 156:Src/usbd_desc.c ****         0x2,
 157:Src/usbd_desc.c ****         0x0,
 158:Src/usbd_desc.c ****         0x0,
 159:Src/usbd_desc.c ****         0x0};
 160:Src/usbd_desc.c **** #endif
 161:Src/usbd_desc.c **** 
 162:Src/usbd_desc.c **** /**
 163:Src/usbd_desc.c ****  * @}
 164:Src/usbd_desc.c ****  */
 165:Src/usbd_desc.c **** 
 166:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 167:Src/usbd_desc.c ****  * @brief Private variables.
 168:Src/usbd_desc.c ****  * @{
 169:Src/usbd_desc.c ****  */
 170:Src/usbd_desc.c **** 
 171:Src/usbd_desc.c **** #if defined(__ICCARM__)
 172:Src/usbd_desc.c **** #pragma data_alignment = 4
 173:Src/usbd_desc.c **** #endif
 174:Src/usbd_desc.c **** 
 175:Src/usbd_desc.c **** /** USB lang identifier descriptor. */
 176:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC] __ALIGN_END =
 177:Src/usbd_desc.c ****     {
 178:Src/usbd_desc.c ****         USB_LEN_LANGID_STR_DESC,
 179:Src/usbd_desc.c ****         USB_DESC_TYPE_STRING,
 180:Src/usbd_desc.c ****         LOBYTE(USBD_LANGID_STRING),
 181:Src/usbd_desc.c ****         HIBYTE(USBD_LANGID_STRING)};
 182:Src/usbd_desc.c **** 
 183:Src/usbd_desc.c **** #if defined(__ICCARM__)
 184:Src/usbd_desc.c **** #pragma data_alignment = 4
 185:Src/usbd_desc.c **** #endif
 186:Src/usbd_desc.c **** 
 187:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ] __ALIGN_END;
 188:Src/usbd_desc.c **** 
 189:Src/usbd_desc.c **** #if defined(__ICCARM__)
 190:Src/usbd_desc.c **** #pragma data_alignment = 4
 191:Src/usbd_desc.c **** #endif
 192:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StringSerial[USB_SIZ_STRING_SERIAL] __ALIGN_END = {
 193:Src/usbd_desc.c ****     USB_SIZ_STRING_SERIAL,
 194:Src/usbd_desc.c ****     USB_DESC_TYPE_STRING,
 195:Src/usbd_desc.c **** };
 196:Src/usbd_desc.c **** 
 197:Src/usbd_desc.c **** /**
 198:Src/usbd_desc.c ****  * @}
 199:Src/usbd_desc.c ****  */
 200:Src/usbd_desc.c **** 
ARM GAS  /tmp/ccl4Anca.s 			page 5


 201:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions USBD_DESC_Private_Functions
 202:Src/usbd_desc.c ****  * @brief Private functions.
 203:Src/usbd_desc.c ****  * @{
 204:Src/usbd_desc.c ****  */
 205:Src/usbd_desc.c **** 
 206:Src/usbd_desc.c **** /**
 207:Src/usbd_desc.c ****  * @brief  Return the device descriptor
 208:Src/usbd_desc.c ****  * @param  speed : Current device speed
 209:Src/usbd_desc.c ****  * @param  length : Pointer to data length variable
 210:Src/usbd_desc.c ****  * @retval Pointer to descriptor buffer
 211:Src/usbd_desc.c ****  */
 212:Src/usbd_desc.c **** uint8_t *USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 213:Src/usbd_desc.c **** {
  30              		.loc 1 213 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 214:Src/usbd_desc.c ****   UNUSED(speed);
  35              		.loc 1 214 3 view .LVU1
 215:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_DeviceDesc);
  36              		.loc 1 215 3 view .LVU2
  37              		.loc 1 215 11 is_stmt 0 view .LVU3
  38 0000 1223     		movs	r3, #18
  39 0002 0B80     		strh	r3, [r1]	@ movhi
 216:Src/usbd_desc.c ****   return USBD_FS_DeviceDesc;
  40              		.loc 1 216 3 is_stmt 1 view .LVU4
 217:Src/usbd_desc.c **** }
  41              		.loc 1 217 1 is_stmt 0 view .LVU5
  42 0004 0048     		ldr	r0, .L2
  43              	.LVL1:
  44              		.loc 1 217 1 view .LVU6
  45 0006 7047     		bx	lr
  46              	.L3:
  47              		.align	2
  48              	.L2:
  49 0008 00000000 		.word	.LANCHOR0
  50              		.cfi_endproc
  51              	.LFE138:
  53              		.section	.text.USBD_FS_LangIDStrDescriptor,"ax",%progbits
  54              		.align	1
  55              		.global	USBD_FS_LangIDStrDescriptor
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	USBD_FS_LangIDStrDescriptor:
  62              	.LVL2:
  63              	.LFB139:
 218:Src/usbd_desc.c **** 
 219:Src/usbd_desc.c **** /**
 220:Src/usbd_desc.c ****  * @brief  Return the LangID string descriptor
 221:Src/usbd_desc.c ****  * @param  speed : Current device speed
 222:Src/usbd_desc.c ****  * @param  length : Pointer to data length variable
 223:Src/usbd_desc.c ****  * @retval Pointer to descriptor buffer
 224:Src/usbd_desc.c ****  */
 225:Src/usbd_desc.c **** uint8_t *USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
ARM GAS  /tmp/ccl4Anca.s 			page 6


 226:Src/usbd_desc.c **** {
  64              		.loc 1 226 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 227:Src/usbd_desc.c ****   UNUSED(speed);
  69              		.loc 1 227 3 view .LVU8
 228:Src/usbd_desc.c ****   *length = sizeof(USBD_LangIDDesc);
  70              		.loc 1 228 3 view .LVU9
  71              		.loc 1 228 11 is_stmt 0 view .LVU10
  72 0000 0423     		movs	r3, #4
  73 0002 0B80     		strh	r3, [r1]	@ movhi
 229:Src/usbd_desc.c ****   return USBD_LangIDDesc;
  74              		.loc 1 229 3 is_stmt 1 view .LVU11
 230:Src/usbd_desc.c **** }
  75              		.loc 1 230 1 is_stmt 0 view .LVU12
  76 0004 0048     		ldr	r0, .L5
  77              	.LVL3:
  78              		.loc 1 230 1 view .LVU13
  79 0006 7047     		bx	lr
  80              	.L6:
  81              		.align	2
  82              	.L5:
  83 0008 00000000 		.word	.LANCHOR1
  84              		.cfi_endproc
  85              	.LFE139:
  87              		.section	.text.IntToUnicode,"ax",%progbits
  88              		.align	1
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	IntToUnicode:
  95              	.LVL4:
  96              	.LFB146:
 231:Src/usbd_desc.c **** 
 232:Src/usbd_desc.c **** /**
 233:Src/usbd_desc.c ****  * @brief  Return the product string descriptor
 234:Src/usbd_desc.c ****  * @param  speed : Current device speed
 235:Src/usbd_desc.c ****  * @param  length : Pointer to data length variable
 236:Src/usbd_desc.c ****  * @retval Pointer to descriptor buffer
 237:Src/usbd_desc.c ****  */
 238:Src/usbd_desc.c **** uint8_t *USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 239:Src/usbd_desc.c **** {
 240:Src/usbd_desc.c ****   if (speed == 0)
 241:Src/usbd_desc.c ****   {
 242:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 243:Src/usbd_desc.c ****   }
 244:Src/usbd_desc.c ****   else
 245:Src/usbd_desc.c ****   {
 246:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 247:Src/usbd_desc.c ****   }
 248:Src/usbd_desc.c ****   return USBD_StrDesc;
 249:Src/usbd_desc.c **** }
 250:Src/usbd_desc.c **** 
 251:Src/usbd_desc.c **** /**
ARM GAS  /tmp/ccl4Anca.s 			page 7


 252:Src/usbd_desc.c ****  * @brief  Return the manufacturer string descriptor
 253:Src/usbd_desc.c ****  * @param  speed : Current device speed
 254:Src/usbd_desc.c ****  * @param  length : Pointer to data length variable
 255:Src/usbd_desc.c ****  * @retval Pointer to descriptor buffer
 256:Src/usbd_desc.c ****  */
 257:Src/usbd_desc.c **** uint8_t *USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 258:Src/usbd_desc.c **** {
 259:Src/usbd_desc.c ****   UNUSED(speed);
 260:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 261:Src/usbd_desc.c ****   return USBD_StrDesc;
 262:Src/usbd_desc.c **** }
 263:Src/usbd_desc.c **** 
 264:Src/usbd_desc.c **** /**
 265:Src/usbd_desc.c ****  * @brief  Return the serial number string descriptor
 266:Src/usbd_desc.c ****  * @param  speed : Current device speed
 267:Src/usbd_desc.c ****  * @param  length : Pointer to data length variable
 268:Src/usbd_desc.c ****  * @retval Pointer to descriptor buffer
 269:Src/usbd_desc.c ****  */
 270:Src/usbd_desc.c **** uint8_t *USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 271:Src/usbd_desc.c **** {
 272:Src/usbd_desc.c ****   UNUSED(speed);
 273:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 274:Src/usbd_desc.c **** 
 275:Src/usbd_desc.c ****   Get_SerialNum();
 276:Src/usbd_desc.c **** 
 277:Src/usbd_desc.c ****   return (uint8_t *)USBD_StringSerial;
 278:Src/usbd_desc.c **** }
 279:Src/usbd_desc.c **** 
 280:Src/usbd_desc.c **** /**
 281:Src/usbd_desc.c ****  * @brief  Return the configuration string descriptor
 282:Src/usbd_desc.c ****  * @param  speed : Current device speed
 283:Src/usbd_desc.c ****  * @param  length : Pointer to data length variable
 284:Src/usbd_desc.c ****  * @retval Pointer to descriptor buffer
 285:Src/usbd_desc.c ****  */
 286:Src/usbd_desc.c **** uint8_t *USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 287:Src/usbd_desc.c **** {
 288:Src/usbd_desc.c ****   if (speed == USBD_SPEED_HIGH)
 289:Src/usbd_desc.c ****   {
 290:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 291:Src/usbd_desc.c ****   }
 292:Src/usbd_desc.c ****   else
 293:Src/usbd_desc.c ****   {
 294:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 295:Src/usbd_desc.c ****   }
 296:Src/usbd_desc.c ****   return USBD_StrDesc;
 297:Src/usbd_desc.c **** }
 298:Src/usbd_desc.c **** 
 299:Src/usbd_desc.c **** /**
 300:Src/usbd_desc.c ****  * @brief  Return the interface string descriptor
 301:Src/usbd_desc.c ****  * @param  speed : Current device speed
 302:Src/usbd_desc.c ****  * @param  length : Pointer to data length variable
 303:Src/usbd_desc.c ****  * @retval Pointer to descriptor buffer
 304:Src/usbd_desc.c ****  */
 305:Src/usbd_desc.c **** uint8_t *USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 306:Src/usbd_desc.c **** {
 307:Src/usbd_desc.c ****   if (speed == 0)
 308:Src/usbd_desc.c ****   {
ARM GAS  /tmp/ccl4Anca.s 			page 8


 309:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 310:Src/usbd_desc.c ****   }
 311:Src/usbd_desc.c ****   else
 312:Src/usbd_desc.c ****   {
 313:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 314:Src/usbd_desc.c ****   }
 315:Src/usbd_desc.c ****   return USBD_StrDesc;
 316:Src/usbd_desc.c **** }
 317:Src/usbd_desc.c **** 
 318:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 319:Src/usbd_desc.c **** /**
 320:Src/usbd_desc.c ****  * @brief  Return the BOS descriptor
 321:Src/usbd_desc.c ****  * @param  speed : Current device speed
 322:Src/usbd_desc.c ****  * @param  length : Pointer to data length variable
 323:Src/usbd_desc.c ****  * @retval Pointer to descriptor buffer
 324:Src/usbd_desc.c ****  */
 325:Src/usbd_desc.c **** uint8_t *USBD_FS_USR_BOSDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 326:Src/usbd_desc.c **** {
 327:Src/usbd_desc.c ****   UNUSED(speed);
 328:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_BOSDesc);
 329:Src/usbd_desc.c ****   return (uint8_t *)USBD_FS_BOSDesc;
 330:Src/usbd_desc.c **** }
 331:Src/usbd_desc.c **** #endif
 332:Src/usbd_desc.c **** 
 333:Src/usbd_desc.c **** /**
 334:Src/usbd_desc.c ****  * @brief  Create the serial number string descriptor
 335:Src/usbd_desc.c ****  * @param  None
 336:Src/usbd_desc.c ****  * @retval None
 337:Src/usbd_desc.c ****  */
 338:Src/usbd_desc.c **** static void Get_SerialNum(void)
 339:Src/usbd_desc.c **** {
 340:Src/usbd_desc.c ****   uint32_t deviceserial0;
 341:Src/usbd_desc.c ****   uint32_t deviceserial1;
 342:Src/usbd_desc.c ****   uint32_t deviceserial2;
 343:Src/usbd_desc.c **** 
 344:Src/usbd_desc.c ****   deviceserial0 = *(uint32_t *)DEVICE_ID1;
 345:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *)DEVICE_ID2;
 346:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *)DEVICE_ID3;
 347:Src/usbd_desc.c **** 
 348:Src/usbd_desc.c ****   deviceserial0 += deviceserial2;
 349:Src/usbd_desc.c **** 
 350:Src/usbd_desc.c ****   if (deviceserial0 != 0)
 351:Src/usbd_desc.c ****   {
 352:Src/usbd_desc.c ****     IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 353:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 354:Src/usbd_desc.c ****   }
 355:Src/usbd_desc.c **** }
 356:Src/usbd_desc.c **** 
 357:Src/usbd_desc.c **** /**
 358:Src/usbd_desc.c ****  * @brief  Convert Hex 32Bits value into char
 359:Src/usbd_desc.c ****  * @param  value: value to convert
 360:Src/usbd_desc.c ****  * @param  pbuf: pointer to the buffer
 361:Src/usbd_desc.c ****  * @param  len: buffer length
 362:Src/usbd_desc.c ****  * @retval None
 363:Src/usbd_desc.c ****  */
 364:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t *pbuf, uint8_t len)
 365:Src/usbd_desc.c **** {
ARM GAS  /tmp/ccl4Anca.s 			page 9


  97              		.loc 1 365 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 366:Src/usbd_desc.c ****   uint8_t idx = 0;
 101              		.loc 1 366 3 view .LVU15
 367:Src/usbd_desc.c **** 
 368:Src/usbd_desc.c ****   for (idx = 0; idx < len; idx++)
 102              		.loc 1 368 3 view .LVU16
 103              		.loc 1 368 12 is_stmt 0 view .LVU17
 104 0000 0023     		movs	r3, #0
 105              	.LVL5:
 106              		.loc 1 368 17 is_stmt 1 view .LVU18
 107              		.loc 1 368 3 is_stmt 0 view .LVU19
 108 0002 9342     		cmp	r3, r2
 109 0004 1ED2     		bcs	.L15
 365:Src/usbd_desc.c ****   uint8_t idx = 0;
 110              		.loc 1 365 1 view .LVU20
 111 0006 00B5     		push	{lr}
 112              	.LCFI0:
 113              		.cfi_def_cfa_offset 4
 114              		.cfi_offset 14, -4
 115 0008 10E0     		b	.L11
 116              	.L9:
 369:Src/usbd_desc.c ****   {
 370:Src/usbd_desc.c ****     if (((value >> 28)) < 0xA)
 371:Src/usbd_desc.c ****     {
 372:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + '0';
 373:Src/usbd_desc.c ****     }
 374:Src/usbd_desc.c ****     else
 375:Src/usbd_desc.c ****     {
 376:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 117              		.loc 1 376 7 is_stmt 1 view .LVU21
 118              		.loc 1 376 43 is_stmt 0 view .LVU22
 119 000a 0CF1370C 		add	ip, ip, #55
 120              		.loc 1 376 21 view .LVU23
 121 000e 01F813C0 		strb	ip, [r1, r3, lsl #1]
 122              	.L10:
 377:Src/usbd_desc.c ****     }
 378:Src/usbd_desc.c **** 
 379:Src/usbd_desc.c ****     value = value << 4;
 123              		.loc 1 379 5 is_stmt 1 discriminator 2 view .LVU24
 124              		.loc 1 379 11 is_stmt 0 discriminator 2 view .LVU25
 125 0012 0001     		lsls	r0, r0, #4
 126              	.LVL6:
 380:Src/usbd_desc.c **** 
 381:Src/usbd_desc.c ****     pbuf[2 * idx + 1] = 0;
 127              		.loc 1 381 5 is_stmt 1 discriminator 2 view .LVU26
 128              		.loc 1 381 12 is_stmt 0 discriminator 2 view .LVU27
 129 0014 4FEA430C 		lsl	ip, r3, #1
 130              		.loc 1 381 9 discriminator 2 view .LVU28
 131 0018 0CF1010C 		add	ip, ip, #1
 132              		.loc 1 381 23 discriminator 2 view .LVU29
 133 001c 4FF0000E 		mov	lr, #0
 134 0020 01F80CE0 		strb	lr, [r1, ip]
 368:Src/usbd_desc.c ****   {
 135              		.loc 1 368 28 is_stmt 1 discriminator 2 view .LVU30
ARM GAS  /tmp/ccl4Anca.s 			page 10


 368:Src/usbd_desc.c ****   {
 136              		.loc 1 368 31 is_stmt 0 discriminator 2 view .LVU31
 137 0024 0133     		adds	r3, r3, #1
 138              	.LVL7:
 368:Src/usbd_desc.c ****   {
 139              		.loc 1 368 31 discriminator 2 view .LVU32
 140 0026 DBB2     		uxtb	r3, r3
 141              	.LVL8:
 368:Src/usbd_desc.c ****   {
 142              		.loc 1 368 17 is_stmt 1 discriminator 2 view .LVU33
 368:Src/usbd_desc.c ****   {
 143              		.loc 1 368 3 is_stmt 0 discriminator 2 view .LVU34
 144 0028 9342     		cmp	r3, r2
 145 002a 09D2     		bcs	.L16
 146              	.L11:
 370:Src/usbd_desc.c ****     {
 147              		.loc 1 370 5 is_stmt 1 view .LVU35
 370:Src/usbd_desc.c ****     {
 148              		.loc 1 370 17 is_stmt 0 view .LVU36
 149 002c 4FEA107C 		lsr	ip, r0, #28
 370:Src/usbd_desc.c ****     {
 150              		.loc 1 370 8 view .LVU37
 151 0030 B0F1204F 		cmp	r0, #-1610612736
 152 0034 E9D2     		bcs	.L9
 372:Src/usbd_desc.c ****     }
 153              		.loc 1 372 7 is_stmt 1 view .LVU38
 372:Src/usbd_desc.c ****     }
 154              		.loc 1 372 37 is_stmt 0 view .LVU39
 155 0036 0CF1300C 		add	ip, ip, #48
 372:Src/usbd_desc.c ****     }
 156              		.loc 1 372 21 view .LVU40
 157 003a 01F813C0 		strb	ip, [r1, r3, lsl #1]
 158 003e E8E7     		b	.L10
 159              	.L16:
 382:Src/usbd_desc.c ****   }
 383:Src/usbd_desc.c **** }
 160              		.loc 1 383 1 view .LVU41
 161 0040 5DF804FB 		ldr	pc, [sp], #4
 162              	.L15:
 163              	.LCFI1:
 164              		.cfi_def_cfa_offset 0
 165              		.cfi_restore 14
 166              		.loc 1 383 1 view .LVU42
 167 0044 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE146:
 171              		.section	.text.Get_SerialNum,"ax",%progbits
 172              		.align	1
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu fpv4-sp-d16
 178              	Get_SerialNum:
 179              	.LFB145:
 339:Src/usbd_desc.c ****   uint32_t deviceserial0;
 180              		.loc 1 339 1 is_stmt 1 view -0
 181              		.cfi_startproc
ARM GAS  /tmp/ccl4Anca.s 			page 11


 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0000 38B5     		push	{r3, r4, r5, lr}
 185              	.LCFI2:
 186              		.cfi_def_cfa_offset 16
 187              		.cfi_offset 3, -16
 188              		.cfi_offset 4, -12
 189              		.cfi_offset 5, -8
 190              		.cfi_offset 14, -4
 340:Src/usbd_desc.c ****   uint32_t deviceserial1;
 191              		.loc 1 340 3 view .LVU44
 341:Src/usbd_desc.c ****   uint32_t deviceserial2;
 192              		.loc 1 341 3 view .LVU45
 342:Src/usbd_desc.c **** 
 193              		.loc 1 342 3 view .LVU46
 344:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *)DEVICE_ID2;
 194              		.loc 1 344 3 view .LVU47
 344:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *)DEVICE_ID2;
 195              		.loc 1 344 17 is_stmt 0 view .LVU48
 196 0002 0B4B     		ldr	r3, .L21
 197 0004 D3F8100A 		ldr	r0, [r3, #2576]
 198              	.LVL9:
 345:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *)DEVICE_ID3;
 199              		.loc 1 345 3 is_stmt 1 view .LVU49
 345:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *)DEVICE_ID3;
 200              		.loc 1 345 17 is_stmt 0 view .LVU50
 201 0008 D3F8144A 		ldr	r4, [r3, #2580]
 202              	.LVL10:
 346:Src/usbd_desc.c **** 
 203              		.loc 1 346 3 is_stmt 1 view .LVU51
 346:Src/usbd_desc.c **** 
 204              		.loc 1 346 17 is_stmt 0 view .LVU52
 205 000c D3F8183A 		ldr	r3, [r3, #2584]
 206              	.LVL11:
 348:Src/usbd_desc.c **** 
 207              		.loc 1 348 3 is_stmt 1 view .LVU53
 350:Src/usbd_desc.c ****   {
 208              		.loc 1 350 3 view .LVU54
 350:Src/usbd_desc.c ****   {
 209              		.loc 1 350 6 is_stmt 0 view .LVU55
 210 0010 C018     		adds	r0, r0, r3
 211              	.LVL12:
 350:Src/usbd_desc.c ****   {
 212              		.loc 1 350 6 view .LVU56
 213 0012 00D1     		bne	.L20
 214              	.LVL13:
 215              	.L17:
 355:Src/usbd_desc.c **** 
 216              		.loc 1 355 1 view .LVU57
 217 0014 38BD     		pop	{r3, r4, r5, pc}
 218              	.LVL14:
 219              	.L20:
 352:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 220              		.loc 1 352 5 is_stmt 1 view .LVU58
 221 0016 074D     		ldr	r5, .L21+4
 222 0018 0822     		movs	r2, #8
 223 001a A91C     		adds	r1, r5, #2
ARM GAS  /tmp/ccl4Anca.s 			page 12


 224 001c FFF7FEFF 		bl	IntToUnicode
 225              	.LVL15:
 353:Src/usbd_desc.c ****   }
 226              		.loc 1 353 5 view .LVU59
 227 0020 0422     		movs	r2, #4
 228 0022 05F11201 		add	r1, r5, #18
 229 0026 2046     		mov	r0, r4
 230 0028 FFF7FEFF 		bl	IntToUnicode
 231              	.LVL16:
 355:Src/usbd_desc.c **** 
 232              		.loc 1 355 1 is_stmt 0 view .LVU60
 233 002c F2E7     		b	.L17
 234              	.L22:
 235 002e 00BF     		.align	2
 236              	.L21:
 237 0030 0070FF1F 		.word	536834048
 238 0034 00000000 		.word	.LANCHOR2
 239              		.cfi_endproc
 240              	.LFE145:
 242              		.section	.text.USBD_FS_SerialStrDescriptor,"ax",%progbits
 243              		.align	1
 244              		.global	USBD_FS_SerialStrDescriptor
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv4-sp-d16
 250              	USBD_FS_SerialStrDescriptor:
 251              	.LVL17:
 252              	.LFB142:
 271:Src/usbd_desc.c ****   UNUSED(speed);
 253              		.loc 1 271 1 is_stmt 1 view -0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 271:Src/usbd_desc.c ****   UNUSED(speed);
 257              		.loc 1 271 1 is_stmt 0 view .LVU62
 258 0000 08B5     		push	{r3, lr}
 259              	.LCFI3:
 260              		.cfi_def_cfa_offset 8
 261              		.cfi_offset 3, -8
 262              		.cfi_offset 14, -4
 272:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 263              		.loc 1 272 3 is_stmt 1 view .LVU63
 273:Src/usbd_desc.c **** 
 264              		.loc 1 273 3 view .LVU64
 273:Src/usbd_desc.c **** 
 265              		.loc 1 273 11 is_stmt 0 view .LVU65
 266 0002 1A23     		movs	r3, #26
 267 0004 0B80     		strh	r3, [r1]	@ movhi
 275:Src/usbd_desc.c **** 
 268              		.loc 1 275 3 is_stmt 1 view .LVU66
 269 0006 FFF7FEFF 		bl	Get_SerialNum
 270              	.LVL18:
 277:Src/usbd_desc.c **** }
 271              		.loc 1 277 3 view .LVU67
 278:Src/usbd_desc.c **** 
 272              		.loc 1 278 1 is_stmt 0 view .LVU68
ARM GAS  /tmp/ccl4Anca.s 			page 13


 273 000a 0148     		ldr	r0, .L25
 274 000c 08BD     		pop	{r3, pc}
 275              	.L26:
 276 000e 00BF     		.align	2
 277              	.L25:
 278 0010 00000000 		.word	.LANCHOR2
 279              		.cfi_endproc
 280              	.LFE142:
 282              		.section	.rodata.USBD_FS_ProductStrDescriptor.str1.4,"aMS",%progbits,1
 283              		.align	2
 284              	.LC0:
 285 0000 53696465 		.ascii	"Sidewinder Force Feedback Pro\000"
 285      77696E64 
 285      65722046 
 285      6F726365 
 285      20466565 
 286              		.section	.text.USBD_FS_ProductStrDescriptor,"ax",%progbits
 287              		.align	1
 288              		.global	USBD_FS_ProductStrDescriptor
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	USBD_FS_ProductStrDescriptor:
 295              	.LVL19:
 296              	.LFB140:
 239:Src/usbd_desc.c ****   if (speed == 0)
 297              		.loc 1 239 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 239:Src/usbd_desc.c ****   if (speed == 0)
 301              		.loc 1 239 1 is_stmt 0 view .LVU70
 302 0000 08B5     		push	{r3, lr}
 303              	.LCFI4:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 3, -8
 306              		.cfi_offset 14, -4
 307 0002 0A46     		mov	r2, r1
 240:Src/usbd_desc.c ****   {
 308              		.loc 1 240 3 is_stmt 1 view .LVU71
 240:Src/usbd_desc.c ****   {
 309              		.loc 1 240 6 is_stmt 0 view .LVU72
 310 0004 28B9     		cbnz	r0, .L28
 242:Src/usbd_desc.c ****   }
 311              		.loc 1 242 5 is_stmt 1 view .LVU73
 312 0006 0549     		ldr	r1, .L31
 313              	.LVL20:
 242:Src/usbd_desc.c ****   }
 314              		.loc 1 242 5 is_stmt 0 view .LVU74
 315 0008 0548     		ldr	r0, .L31+4
 316              	.LVL21:
 242:Src/usbd_desc.c ****   }
 317              		.loc 1 242 5 view .LVU75
 318 000a FFF7FEFF 		bl	USBD_GetString
 319              	.LVL22:
 320              	.L29:
ARM GAS  /tmp/ccl4Anca.s 			page 14


 248:Src/usbd_desc.c **** }
 321              		.loc 1 248 3 is_stmt 1 view .LVU76
 249:Src/usbd_desc.c **** 
 322              		.loc 1 249 1 is_stmt 0 view .LVU77
 323 000e 0348     		ldr	r0, .L31
 324 0010 08BD     		pop	{r3, pc}
 325              	.LVL23:
 326              	.L28:
 246:Src/usbd_desc.c ****   }
 327              		.loc 1 246 5 is_stmt 1 view .LVU78
 328 0012 0249     		ldr	r1, .L31
 329              	.LVL24:
 246:Src/usbd_desc.c ****   }
 330              		.loc 1 246 5 is_stmt 0 view .LVU79
 331 0014 0248     		ldr	r0, .L31+4
 332              	.LVL25:
 246:Src/usbd_desc.c ****   }
 333              		.loc 1 246 5 view .LVU80
 334 0016 FFF7FEFF 		bl	USBD_GetString
 335              	.LVL26:
 246:Src/usbd_desc.c ****   }
 336              		.loc 1 246 5 view .LVU81
 337 001a F8E7     		b	.L29
 338              	.L32:
 339              		.align	2
 340              	.L31:
 341 001c 00000000 		.word	.LANCHOR3
 342 0020 00000000 		.word	.LC0
 343              		.cfi_endproc
 344              	.LFE140:
 346              		.section	.rodata.USBD_FS_ManufacturerStrDescriptor.str1.4,"aMS",%progbits,1
 347              		.align	2
 348              	.LC1:
 349 0000 4D696372 		.ascii	"Microsoft\000"
 349      6F736F66 
 349      7400
 350              		.section	.text.USBD_FS_ManufacturerStrDescriptor,"ax",%progbits
 351              		.align	1
 352              		.global	USBD_FS_ManufacturerStrDescriptor
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 356              		.fpu fpv4-sp-d16
 358              	USBD_FS_ManufacturerStrDescriptor:
 359              	.LVL27:
 360              	.LFB141:
 258:Src/usbd_desc.c ****   UNUSED(speed);
 361              		.loc 1 258 1 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 258:Src/usbd_desc.c ****   UNUSED(speed);
 365              		.loc 1 258 1 is_stmt 0 view .LVU83
 366 0000 10B5     		push	{r4, lr}
 367              	.LCFI5:
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 4, -8
ARM GAS  /tmp/ccl4Anca.s 			page 15


 370              		.cfi_offset 14, -4
 371 0002 0A46     		mov	r2, r1
 259:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 372              		.loc 1 259 3 is_stmt 1 view .LVU84
 260:Src/usbd_desc.c ****   return USBD_StrDesc;
 373              		.loc 1 260 3 view .LVU85
 374 0004 034C     		ldr	r4, .L35
 375 0006 2146     		mov	r1, r4
 376              	.LVL28:
 260:Src/usbd_desc.c ****   return USBD_StrDesc;
 377              		.loc 1 260 3 is_stmt 0 view .LVU86
 378 0008 0348     		ldr	r0, .L35+4
 379              	.LVL29:
 260:Src/usbd_desc.c ****   return USBD_StrDesc;
 380              		.loc 1 260 3 view .LVU87
 381 000a FFF7FEFF 		bl	USBD_GetString
 382              	.LVL30:
 261:Src/usbd_desc.c **** }
 383              		.loc 1 261 3 is_stmt 1 view .LVU88
 262:Src/usbd_desc.c **** 
 384              		.loc 1 262 1 is_stmt 0 view .LVU89
 385 000e 2046     		mov	r0, r4
 386 0010 10BD     		pop	{r4, pc}
 387              	.L36:
 388 0012 00BF     		.align	2
 389              	.L35:
 390 0014 00000000 		.word	.LANCHOR3
 391 0018 00000000 		.word	.LC1
 392              		.cfi_endproc
 393              	.LFE141:
 395              		.section	.rodata.USBD_FS_ConfigStrDescriptor.str1.4,"aMS",%progbits,1
 396              		.align	2
 397              	.LC2:
 398 0000 46464220 		.ascii	"FFB Config\000"
 398      436F6E66 
 398      696700
 399              		.section	.text.USBD_FS_ConfigStrDescriptor,"ax",%progbits
 400              		.align	1
 401              		.global	USBD_FS_ConfigStrDescriptor
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu fpv4-sp-d16
 407              	USBD_FS_ConfigStrDescriptor:
 408              	.LVL31:
 409              	.LFB143:
 287:Src/usbd_desc.c ****   if (speed == USBD_SPEED_HIGH)
 410              		.loc 1 287 1 is_stmt 1 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 287:Src/usbd_desc.c ****   if (speed == USBD_SPEED_HIGH)
 414              		.loc 1 287 1 is_stmt 0 view .LVU91
 415 0000 08B5     		push	{r3, lr}
 416              	.LCFI6:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 3, -8
ARM GAS  /tmp/ccl4Anca.s 			page 16


 419              		.cfi_offset 14, -4
 420 0002 0A46     		mov	r2, r1
 288:Src/usbd_desc.c ****   {
 421              		.loc 1 288 3 is_stmt 1 view .LVU92
 288:Src/usbd_desc.c ****   {
 422              		.loc 1 288 6 is_stmt 0 view .LVU93
 423 0004 28B9     		cbnz	r0, .L38
 290:Src/usbd_desc.c ****   }
 424              		.loc 1 290 5 is_stmt 1 view .LVU94
 425 0006 0549     		ldr	r1, .L41
 426              	.LVL32:
 290:Src/usbd_desc.c ****   }
 427              		.loc 1 290 5 is_stmt 0 view .LVU95
 428 0008 0548     		ldr	r0, .L41+4
 429              	.LVL33:
 290:Src/usbd_desc.c ****   }
 430              		.loc 1 290 5 view .LVU96
 431 000a FFF7FEFF 		bl	USBD_GetString
 432              	.LVL34:
 433              	.L39:
 296:Src/usbd_desc.c **** }
 434              		.loc 1 296 3 is_stmt 1 view .LVU97
 297:Src/usbd_desc.c **** 
 435              		.loc 1 297 1 is_stmt 0 view .LVU98
 436 000e 0348     		ldr	r0, .L41
 437 0010 08BD     		pop	{r3, pc}
 438              	.LVL35:
 439              	.L38:
 294:Src/usbd_desc.c ****   }
 440              		.loc 1 294 5 is_stmt 1 view .LVU99
 441 0012 0249     		ldr	r1, .L41
 442              	.LVL36:
 294:Src/usbd_desc.c ****   }
 443              		.loc 1 294 5 is_stmt 0 view .LVU100
 444 0014 0248     		ldr	r0, .L41+4
 445              	.LVL37:
 294:Src/usbd_desc.c ****   }
 446              		.loc 1 294 5 view .LVU101
 447 0016 FFF7FEFF 		bl	USBD_GetString
 448              	.LVL38:
 294:Src/usbd_desc.c ****   }
 449              		.loc 1 294 5 view .LVU102
 450 001a F8E7     		b	.L39
 451              	.L42:
 452              		.align	2
 453              	.L41:
 454 001c 00000000 		.word	.LANCHOR3
 455 0020 00000000 		.word	.LC2
 456              		.cfi_endproc
 457              	.LFE143:
 459              		.section	.rodata.USBD_FS_InterfaceStrDescriptor.str1.4,"aMS",%progbits,1
 460              		.align	2
 461              	.LC3:
 462 0000 46464220 		.ascii	"FFB Interface\000"
 462      496E7465 
 462      72666163 
 462      6500
ARM GAS  /tmp/ccl4Anca.s 			page 17


 463              		.section	.text.USBD_FS_InterfaceStrDescriptor,"ax",%progbits
 464              		.align	1
 465              		.global	USBD_FS_InterfaceStrDescriptor
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 469              		.fpu fpv4-sp-d16
 471              	USBD_FS_InterfaceStrDescriptor:
 472              	.LVL39:
 473              	.LFB144:
 306:Src/usbd_desc.c ****   if (speed == 0)
 474              		.loc 1 306 1 is_stmt 1 view -0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 306:Src/usbd_desc.c ****   if (speed == 0)
 478              		.loc 1 306 1 is_stmt 0 view .LVU104
 479 0000 08B5     		push	{r3, lr}
 480              	.LCFI7:
 481              		.cfi_def_cfa_offset 8
 482              		.cfi_offset 3, -8
 483              		.cfi_offset 14, -4
 484 0002 0A46     		mov	r2, r1
 307:Src/usbd_desc.c ****   {
 485              		.loc 1 307 3 is_stmt 1 view .LVU105
 307:Src/usbd_desc.c ****   {
 486              		.loc 1 307 6 is_stmt 0 view .LVU106
 487 0004 28B9     		cbnz	r0, .L44
 309:Src/usbd_desc.c ****   }
 488              		.loc 1 309 5 is_stmt 1 view .LVU107
 489 0006 0549     		ldr	r1, .L47
 490              	.LVL40:
 309:Src/usbd_desc.c ****   }
 491              		.loc 1 309 5 is_stmt 0 view .LVU108
 492 0008 0548     		ldr	r0, .L47+4
 493              	.LVL41:
 309:Src/usbd_desc.c ****   }
 494              		.loc 1 309 5 view .LVU109
 495 000a FFF7FEFF 		bl	USBD_GetString
 496              	.LVL42:
 497              	.L45:
 315:Src/usbd_desc.c **** }
 498              		.loc 1 315 3 is_stmt 1 view .LVU110
 316:Src/usbd_desc.c **** 
 499              		.loc 1 316 1 is_stmt 0 view .LVU111
 500 000e 0348     		ldr	r0, .L47
 501 0010 08BD     		pop	{r3, pc}
 502              	.LVL43:
 503              	.L44:
 313:Src/usbd_desc.c ****   }
 504              		.loc 1 313 5 is_stmt 1 view .LVU112
 505 0012 0249     		ldr	r1, .L47
 506              	.LVL44:
 313:Src/usbd_desc.c ****   }
 507              		.loc 1 313 5 is_stmt 0 view .LVU113
 508 0014 0248     		ldr	r0, .L47+4
 509              	.LVL45:
ARM GAS  /tmp/ccl4Anca.s 			page 18


 313:Src/usbd_desc.c ****   }
 510              		.loc 1 313 5 view .LVU114
 511 0016 FFF7FEFF 		bl	USBD_GetString
 512              	.LVL46:
 313:Src/usbd_desc.c ****   }
 513              		.loc 1 313 5 view .LVU115
 514 001a F8E7     		b	.L45
 515              	.L48:
 516              		.align	2
 517              	.L47:
 518 001c 00000000 		.word	.LANCHOR3
 519 0020 00000000 		.word	.LC3
 520              		.cfi_endproc
 521              	.LFE144:
 523              		.global	USBD_StringSerial
 524              		.global	USBD_StrDesc
 525              		.global	USBD_LangIDDesc
 526              		.global	USBD_FS_DeviceDesc
 527              		.global	FS_Desc
 528              		.section	.bss.USBD_StrDesc,"aw",%nobits
 529              		.align	2
 530              		.set	.LANCHOR3,. + 0
 533              	USBD_StrDesc:
 534 0000 00000000 		.space	512
 534      00000000 
 534      00000000 
 534      00000000 
 534      00000000 
 535              		.section	.data.FS_Desc,"aw"
 536              		.align	2
 539              	FS_Desc:
 540 0000 00000000 		.word	USBD_FS_DeviceDescriptor
 541 0004 00000000 		.word	USBD_FS_LangIDStrDescriptor
 542 0008 00000000 		.word	USBD_FS_ManufacturerStrDescriptor
 543 000c 00000000 		.word	USBD_FS_ProductStrDescriptor
 544 0010 00000000 		.word	USBD_FS_SerialStrDescriptor
 545 0014 00000000 		.word	USBD_FS_ConfigStrDescriptor
 546 0018 00000000 		.word	USBD_FS_InterfaceStrDescriptor
 547              		.section	.data.USBD_FS_DeviceDesc,"aw"
 548              		.align	2
 549              		.set	.LANCHOR0,. + 0
 552              	USBD_FS_DeviceDesc:
 553 0000 12010002 		.ascii	"\022\001\000\002\000\000\000@^\004\033\000\000\002\001"
 553      00000040 
 553      5E041B00 
 553      000201
 554 000f 020301   		.ascii	"\002\003\001"
 555              		.section	.data.USBD_LangIDDesc,"aw"
 556              		.align	2
 557              		.set	.LANCHOR1,. + 0
 560              	USBD_LangIDDesc:
 561 0000 04030904 		.ascii	"\004\003\011\004"
 562              		.section	.data.USBD_StringSerial,"aw"
 563              		.align	2
 564              		.set	.LANCHOR2,. + 0
 567              	USBD_StringSerial:
 568 0000 1A0300   		.ascii	"\032\003\000"
ARM GAS  /tmp/ccl4Anca.s 			page 19


 569 0003 00000000 		.space	23
 569      00000000 
 569      00000000 
 569      00000000 
 569      00000000 
 570              		.text
 571              	.Letext0:
 572              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 573              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 574              		.file 4 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 575              		.file 5 "Inc/usbd_desc.h"
 576              		.file 6 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ctlreq.h"
ARM GAS  /tmp/ccl4Anca.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_desc.c
     /tmp/ccl4Anca.s:18     .text.USBD_FS_DeviceDescriptor:0000000000000000 $t
     /tmp/ccl4Anca.s:26     .text.USBD_FS_DeviceDescriptor:0000000000000000 USBD_FS_DeviceDescriptor
     /tmp/ccl4Anca.s:49     .text.USBD_FS_DeviceDescriptor:0000000000000008 $d
     /tmp/ccl4Anca.s:54     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 $t
     /tmp/ccl4Anca.s:61     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 USBD_FS_LangIDStrDescriptor
     /tmp/ccl4Anca.s:83     .text.USBD_FS_LangIDStrDescriptor:0000000000000008 $d
     /tmp/ccl4Anca.s:88     .text.IntToUnicode:0000000000000000 $t
     /tmp/ccl4Anca.s:94     .text.IntToUnicode:0000000000000000 IntToUnicode
     /tmp/ccl4Anca.s:172    .text.Get_SerialNum:0000000000000000 $t
     /tmp/ccl4Anca.s:178    .text.Get_SerialNum:0000000000000000 Get_SerialNum
     /tmp/ccl4Anca.s:237    .text.Get_SerialNum:0000000000000030 $d
     /tmp/ccl4Anca.s:243    .text.USBD_FS_SerialStrDescriptor:0000000000000000 $t
     /tmp/ccl4Anca.s:250    .text.USBD_FS_SerialStrDescriptor:0000000000000000 USBD_FS_SerialStrDescriptor
     /tmp/ccl4Anca.s:278    .text.USBD_FS_SerialStrDescriptor:0000000000000010 $d
     /tmp/ccl4Anca.s:283    .rodata.USBD_FS_ProductStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccl4Anca.s:287    .text.USBD_FS_ProductStrDescriptor:0000000000000000 $t
     /tmp/ccl4Anca.s:294    .text.USBD_FS_ProductStrDescriptor:0000000000000000 USBD_FS_ProductStrDescriptor
     /tmp/ccl4Anca.s:341    .text.USBD_FS_ProductStrDescriptor:000000000000001c $d
     /tmp/ccl4Anca.s:347    .rodata.USBD_FS_ManufacturerStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccl4Anca.s:351    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 $t
     /tmp/ccl4Anca.s:358    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 USBD_FS_ManufacturerStrDescriptor
     /tmp/ccl4Anca.s:390    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000014 $d
     /tmp/ccl4Anca.s:396    .rodata.USBD_FS_ConfigStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccl4Anca.s:400    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 $t
     /tmp/ccl4Anca.s:407    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 USBD_FS_ConfigStrDescriptor
     /tmp/ccl4Anca.s:454    .text.USBD_FS_ConfigStrDescriptor:000000000000001c $d
     /tmp/ccl4Anca.s:460    .rodata.USBD_FS_InterfaceStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccl4Anca.s:464    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 $t
     /tmp/ccl4Anca.s:471    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 USBD_FS_InterfaceStrDescriptor
     /tmp/ccl4Anca.s:518    .text.USBD_FS_InterfaceStrDescriptor:000000000000001c $d
     /tmp/ccl4Anca.s:567    .data.USBD_StringSerial:0000000000000000 USBD_StringSerial
     /tmp/ccl4Anca.s:533    .bss.USBD_StrDesc:0000000000000000 USBD_StrDesc
     /tmp/ccl4Anca.s:560    .data.USBD_LangIDDesc:0000000000000000 USBD_LangIDDesc
     /tmp/ccl4Anca.s:552    .data.USBD_FS_DeviceDesc:0000000000000000 USBD_FS_DeviceDesc
     /tmp/ccl4Anca.s:539    .data.FS_Desc:0000000000000000 FS_Desc
     /tmp/ccl4Anca.s:529    .bss.USBD_StrDesc:0000000000000000 $d
     /tmp/ccl4Anca.s:536    .data.FS_Desc:0000000000000000 $d
     /tmp/ccl4Anca.s:548    .data.USBD_FS_DeviceDesc:0000000000000000 $d
     /tmp/ccl4Anca.s:556    .data.USBD_LangIDDesc:0000000000000000 $d
     /tmp/ccl4Anca.s:563    .data.USBD_StringSerial:0000000000000000 $d

UNDEFINED SYMBOLS
USBD_GetString
